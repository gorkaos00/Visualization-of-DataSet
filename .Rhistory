xyplot(sunspot.year, panel = panel.xyarea, origin = 0,
aspect = "xy", cut = list(n = 4, overlap = 0))
library(latticeExtra)
data(singer, package = "lattice")
xyplot(sunspot.year, panel = panel.xyarea, origin = 0,
aspect = "xy", cut = list(n = 4, overlap = 0))
library(lattice)
super.sym <- trellis.par.get("superpose.symbol")
splom(~iris[1:4], groups = Species, data = iris,
panel = panel.superpose,
key = list(title = "Three Varieties of Iris",
columns = 3,
points = list(pch = super.sym$pch[1:3],
col = super.sym$col[1:3]),
text = list(c("Setosa", "Versicolor", "Virginica"))))
splom(~iris[1:3]|Species, data = iris,
layout=c(2,2), pscales = 0,
varnames = c("Sepal\nLength", "Sepal\nWidth", "Petal\nLength"),
page = function(...) {
ltext(x = seq(.6, .8, length.out = 4),
y = seq(.9, .6, length.out = 4),
labels = c("Three", "Varieties", "of", "Iris"),
cex = 2)
})
library(lattice)
angle <- seq(0, 2*pi, length=19)[-19]
yy <- sin(angle)
gg <- factor(rep(1:3, each=6))
parallelplot(~ as.data.frame(split(yy, gg)) | "Wykres r?wnoleg?y")
library(BCA)
runApp('projekt.R')
library(shiny); runApp('projekt.R')
library(shiny); runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
library(shiny); runApp('projekt.R')
library(shiny); runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
runApp('projekt.R')
d1=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
d1=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
library(shiny); runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
data=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
cos<-as.factor("Region")
mean_scores <- data %>%
group_by(cos) %>%
summarize(mean = mean(HappinessScore))
data=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
cos<-"Region"
mean_scores <- data %>%
group_by(!!cos) %>%
summarize(mean = mean(HappinessScore))
ggplot(mean_scores, aes(x = Region, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
ggplot(mean_scores, aes(x = !!cos, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
ggplot(mean_scores, aes(x = Region, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
ggplot(mean_scores, aes(x = Region, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
mean_scores <- data %>%
group_by(Region) %>%
summarize(mean = mean(HappinessScore))
ggplot(mean_scores, aes(x = Region, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
ggplot(mean_scores, aes(x = Hemisphere, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
mean_scores <- data %>%
group_by(Hemisphere) %>%
summarize(mean = mean(HappinessScore))
ggplot(mean_scores, aes(x = Hemisphere, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
ggplot(d1,aes(x=Dalc,color=sex))+geom_histogram(binwidth = 0.5)
mean_scores <- data %>%
group_by(Hemisphere) %>%
summarize(mean = mean(HappinessScore))
ggplot(mean_scores, aes(x = Hemisphere, y = mean)) +
geom_col(fill = "#0073C2FF") +  # add mean points
labs(title = "Happiness Scores by Region", x = "Region", y = "Mean Happiness Score") +
theme_minimal()+
theme(text = element_text(size = 12, color = "black"),axis.text.x = element_text(angle = 45))
runApp('projekt2.R')
data
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
ggplot(data, aes_string(x = HDI, y = GPD_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24), name = "Population (M)") +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes_string(x = HDI, y = GPD_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24), name = "Population (M)") +
geom_smooth(method = "lm", color = "red", size = 1)
data
ggplot(data, aes_string(x = HDI, y = GPD_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24), name = "Population (M)") +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GPD_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24), name = "Population (M)") +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24), name = "Population (M)") +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 24)) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 100)) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
scale_size(range = c(.1, 10)) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color="orange",
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color=HDI,
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(color=HDI,
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(aes(color=HDI),
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(aes(color = HDI),
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_point(aes(color = GDP_PerCapita),
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
ggplot(data, aes(x = HDI, y = GDP_PerCapita)) +
geom_point(aes(color = HDI),
fill="#69b332",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_point(aes(color = GDP_PerCapita),
fill="#69b3a2",
shape=21,
alpha=0.5,
size=6,
stroke = 2) +
geom_smooth(method = "lm", color = "red", size = 1)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
data=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
data$Country<-as.factor(data$Country)
runApp('projekt2.R')
data=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
data$Country<-as.factor(data$Country)
data$Region<-as.factor(data$Region)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
library(shiny); runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
library(shiny); runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
data
runApp('projekt2.R')
temp_data<-data
temp_data["Total_Alcohol_Consumption"] = temp_data[["Beer_PerCapita", "Spirit_PerCapita", "Wine_PerCapita"]].sum(axis=1)
View(temp_data)
temp_data["Total_Alcohol_Consumption"] = temp_data["Beer_PerCapita", "Spirit_PerCapita", "Wine_PerCapita"].sum
temp_data["Total_Alcohol_Consumption"] = temp_data[["Beer_PerCapita", "Spirit_PerCapita", "Wine_PerCapita"]].sum
temp_data["Total_Alcohol_Consumption"]=temp_data[["Beer_PerCapita", "Spirit_PerCapita", "Wine_PerCapita"]].sum
temp_data["Total_Alcohol_Consumption"] = temp_data["Beer_PerCapita"] + temp_data["Spirit_PerCapita"] + temp_data["Wine_PerCapita"]
View(temp_data)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
mp_data <- temp_data %>%
arrange(HDI)
View(temp_data)
View(temp_data)
sorted_data <- data %>%
arrange(HappinessScore)
View(sorted_data)
View(temp_data)
temp_data <- temp_data %>%
arrange(HDI)
View(temp_data)
temp_data <- temp_data %>%
arrange(GPD_PerCapita)
temp_data <- temp_data %>%
arrange(GDP_PerCapita)
data=read.table("HappinessAlcoholConsumption.csv",sep=",",header=TRUE)
temp_data<-data
temp_data["Total_Alcohol_Consumption"] = temp_data["Beer_PerCapita"] + temp_data["Spirit_PerCapita"] + temp_data["Wine_PerCapita"]
temp_data <- temp_data %>%
arrange(HDI)
temp_data <- temp_data %>%
arrange(GDP_PerCapita)
runApp('projekt.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
temp_data <- temp_data %>%
arrange(HDI)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
temp_data <- temp_data %>%
arrange(Total_Alcohol_Consumption)
runApp('projekt2.R')
library(shiny); runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
spline.d <- as.data.frame(spline(temp_data$Total_Alcohol_Consumption, temp_data$HDI))
print(spline.d)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
temp_data
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
temp1<- subset(temp_data, select = c("Country", "Wine_PerCapita"))
temp1["Alcohol_Consumption"] =temp_data["Wine_PerCapita"]
temp2<- subset(temp_data, select = c("Country", "Spirit_PerCapita"))
temp2["Alcohol_Consumption"] =temp_data["Spirit_PerCapita"]
temp3<- subset(temp_data, select = c("Country", "Beer_PerCapita"))
temp3["Alcohol_Consumption"] =temp_data["Beer_PerCapita"]
temp <- rbind(temp1, temp2, temp3)
View(temp_data)
temp <- rbind(temp1, temp2, temp3)
temp <- bind_rows(temp1, temp2, temp3)
View(temp)
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
runApp('projekt2.R')
library(shiny); runApp('projekt2.R')
runApp('projekt2.R')
